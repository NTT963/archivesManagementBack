<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.jit.sose.mapper.FileMapper" >
  <resultMap id="BaseResultMap" type="org.jit.sose.entity.File" >
    <id column="fileId" property="fileid" jdbcType="INTEGER" />
    <result column="fileNewName" property="filenewname" jdbcType="VARCHAR" />
    <result column="fileOriginName" property="fileoriginname" jdbcType="VARCHAR" />
    <result column="fileOwnerId" property="fileownerid" jdbcType="INTEGER" />
    <result column="fileTime" property="filetime" jdbcType="TIMESTAMP" />
    <result column="fileUrl" property="fileurl" jdbcType="VARCHAR" />
    <result column="fileStatus" property="filestatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    fileId, fileNewName, fileOriginName, fileOwnerId, fileTime, fileUrl, fileStatus
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from file
    where fileId = #{fileid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from file
    where fileId = #{fileid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.jit.sose.entity.File" >
    insert into file (fileId, fileNewName, fileOriginName, 
      fileOwnerId, fileTime, fileUrl, 
      fileStatus)
    values (#{fileid,jdbcType=INTEGER}, #{filenewname,jdbcType=VARCHAR}, #{fileoriginname,jdbcType=VARCHAR}, 
      #{fileownerid,jdbcType=INTEGER}, #{filetime,jdbcType=TIMESTAMP}, #{fileurl,jdbcType=VARCHAR}, 
      #{filestatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.jit.sose.entity.File" >
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileid != null" >
        fileId,
      </if>
      <if test="filenewname != null" >
        fileNewName,
      </if>
      <if test="fileoriginname != null" >
        fileOriginName,
      </if>
      <if test="fileownerid != null" >
        fileOwnerId,
      </if>
      <if test="filetime != null" >
        fileTime,
      </if>
      <if test="fileurl != null" >
        fileUrl,
      </if>
      <if test="filestatus != null" >
        fileStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileid != null" >
        #{fileid,jdbcType=INTEGER},
      </if>
      <if test="filenewname != null" >
        #{filenewname,jdbcType=VARCHAR},
      </if>
      <if test="fileoriginname != null" >
        #{fileoriginname,jdbcType=VARCHAR},
      </if>
      <if test="fileownerid != null" >
        #{fileownerid,jdbcType=INTEGER},
      </if>
      <if test="filetime != null" >
        #{filetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileurl != null" >
        #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="filestatus != null" >
        #{filestatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.jit.sose.entity.File" >
    update file
    <set >
      <if test="filenewname != null" >
        fileNewName = #{filenewname,jdbcType=VARCHAR},
      </if>
      <if test="fileoriginname != null" >
        fileOriginName = #{fileoriginname,jdbcType=VARCHAR},
      </if>
      <if test="fileownerid != null" >
        fileOwnerId = #{fileownerid,jdbcType=INTEGER},
      </if>
      <if test="filetime != null" >
        fileTime = #{filetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileurl != null" >
        fileUrl = #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="filestatus != null" >
        fileStatus = #{filestatus,jdbcType=VARCHAR},
      </if>
    </set>
    where fileId = #{fileid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jit.sose.entity.File" >
    update file
    set fileNewName = #{filenewname,jdbcType=VARCHAR},
      fileOriginName = #{fileoriginname,jdbcType=VARCHAR},
      fileOwnerId = #{fileownerid,jdbcType=INTEGER},
      fileTime = #{filetime,jdbcType=TIMESTAMP},
      fileUrl = #{fileurl,jdbcType=VARCHAR},
      fileStatus = #{filestatus,jdbcType=VARCHAR}
    where fileId = #{fileid,jdbcType=INTEGER}
  </update>
</mapper>